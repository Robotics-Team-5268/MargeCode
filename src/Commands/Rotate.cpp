// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

#include "Commands/Rotate.h"
#include "Subsystems/Drive.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

Rotate::Rotate(): Command(), degrees() {

}
Rotate::Rotate(float amount): Command() {
	// Use requires() here to declare subsystem dependencies
// eg. requires(chassis);
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
Requires(Robot::drive.get());
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
degrees = amount;
}
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void Rotate::Initialize() {
}

// Called repeatedly when this Command is scheduled to run
void Rotate::Execute() {
	if(degrees > 0 && degrees <= 180)
	{
		Robot::drive->setMotors(1, -1); //Left speed is first, right speed second
	}
	else
	{
		Robot::drive->setMotors(-1, 1);
	}
}

// Make this return true when this Command no longer needs to run execute()
bool Rotate::IsFinished() {
	if(degrees -Robot::drive->returnAngle() < 5)
	{
		return true;
	}
	else
	{
		return false;
	}
}

// Called once after isFinished returns true
void Rotate::End() {

}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void Rotate::Interrupted() {

}
